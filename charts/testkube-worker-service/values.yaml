# Default values for testkube-worker-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Custom CA to use as a trusted CA during TLS connections. Specify a secret with the PEM encoded CA under the key specified by customCaSecretKey.
  customCaSecretRef: ""
  # -- Custom CA to use as a trusted CA during TLS connections. Specify a key for the secret specified under customCaSecretRef.
  customCaSecretKey: "ca.crt"
  # -- Image pull secrets
  imagePullSecrets: []
  # -- Image pull policy
  imagePullPolicy: ""
  # -- Global image registry to be prepended for to all images (usually defined in parent chart)
  imageRegistry: ""
  # -- Common labels which will be added to all resources
  labels: {}
  ## Global MongoDB configuration for Testkube Pro API
  mongo:
    # -- Mongo DSN connection string
    dsn: ""
    # -- Mongo DSN connection string secret ref (secret must contain key MONGO_DSN) (default is `mongo-dsn`)
    dsnSecretRef: ""
    # -- Mongo database name
    database: ""
    # -- Mongo read preference (primary|primaryPreferred|secondary|secondaryPreferred|nearest)
    readPreference: ""
    # -- Allow or prohibit writing temporary files on disk when a pipeline stage exceeds the 100 megabyte limit.
    allowDiskUse: false
  ## Global NATS configuration for Testkube Pro API
  nats:
    # -- NATS URI
    uri: ""
  ## Global S3 configuration for Testkube Pro
  storage:
    # -- S3 bucket in which Test Artifacts & Logs will be stored
    outputsBucket: ""
    # -- Endpoint to a S3 compatible storage service (without protocol)
    endpoint: ""
    # -- S3 region
    region: ""
    # -- Toggle whether to use HTTPS when connecting to the S3 server
    secure: null
    # -- Toggle whether to skip verifying TLS certificates
    skipVerify: null
    # -- S3 Access Key ID
    accessKeyId: ""
    # -- S3 Secret Access Key
    secretAccessKey: ""
    # -- S3 Token
    token: ""
    # -- Credentials secret ref (secret should contain keys: root-user, root-password, token) (default is `testkube-cloud-minio-secret`)
    credsSecretRef: ""
  tls: {}
  # -- Toggle whether to globally skip certificate verification
  #skipVerify: false
  # -- Global security Context for all containers
  containerSecurityContext: {}
  # -- Global security Context for all pods
  podSecurityContext: {}
  # -- Global PodDisruptionBudget
  podDisruptionBudget:
    enabled: false
replicaCount: 1
# -- Priority class name defines the priority of this pod relative to others in the cluster.
priorityClassName: ""
image:
  # -- If defined, it will prepend the registry to the image name, if not, default docker.io will be prepended
  registry: ""
  repository: kubeshop/testkube-enterprise-worker-service
  pullPolicy: IfNotPresent
  tag: "1.12.0"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
# -- Additional env vars to be added to the deployment
additionalEnv: {}
# -- Specifies the path to the directory (skip the trailing slash) where CA certificates should be mounted. The mounted file should container a PEM encoded CA certificate.
customCaDirPath: ""
api:
  # -- S3 bucket in which outputs are stored
  outputsBucket: testkube-cloud-outputs
  nats:
    # -- NATS URI
    uri: "nats://nats.messaging.svc.cluster.local:4222"
  minio:
    # -- MinIO endpoint
    endpoint: "minio.testkube.svc.cluster.local:9000"
    # -- S3 region
    region: ""
    # -- MinIO access key id
    accessKeyId: ""
    # -- MinIO secret access key
    secretAccessKey: ""
    # -- MinIO token
    token: ""
    # -- Credentials secret ref (secret should contain keys: root-user, root-password, token) (default is `testkube-cloud-minio-secret`)
    credsSecretRef: ""
    # -- Path to where a Minio credential file should be mounted
    credsFilePath: ""
    # -- Expiration period in days
    expirationPeriod: 0
    # -- Should be set to `true` if MinIO is deployed with a TLS certificate in front.
    secure: false
    # -- Toggle whether to verify TLS certificates
    skipVerify: false
  mongo:
    # -- Mongo DSN connection string secret ref (secret must contain key MONGO_DSN) (default is `mongo-dsn`)
    dsnSecretRef: ""
    # -- if mongoDsnSecretRef is empty (""), mongoDsn field will be used for setting the Mongo DSN connection string
    dsn: "mongodb://mongodb.testkube.svc.cluster.local:27017"
    # -- Mongo database name
    database: "testkubecloud"
    # -- Mongo read preference (primary|primaryPreferred|secondary|secondaryPreferred|nearest)
    readPreference: secondaryPreferred
externalSecrets:
  enabled: false
  refreshInterval: 5m
  clusterSecretStoreName: secret-store
  keys: {}
serviceAccount:
  # -- Toggle whether to create a ServiceAccount resource
  create: false
  # -- Additional labels to add to the ServiceAccount resource
  labels: {}
  # -- Additional annotations to add to the ServiceAccount resource
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
# -- Pod Security Context
podSecurityContext: {}
# fsGroup: 2000
# -- Security Context for app container
securityContext:
  readOnlyRootFilesystem: true
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  # -- It is strongly recommended to set limits for both cpu and memory
  limits: {}
autoscaling:
  # -- Toggle whether to enable Horizontal Pod Autoscaler
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
service:
  # -- Service type
  type: ClusterIP
  # -- Additional annotations to add to the Service resource
  annotations: {}
  # -- Additional labels to add to the Service resource
  labels: {}
  # -- Metrics port
  metricsPort: 9000
prometheus:
  # -- Toggle whether to create ServiceMonitor resource for Prometheus Operator
  enabled: false
  # -- ServiceMonitor labels
  labels: {}
  # -- Scrape interval configuration in ServiceMonitor resource
  scrapeInterval: 15s
  # -- Metrics port which will be scraper
  port: metrics
  # -- Metrics path which will be scraped
  path: /metrics
nodeSelector: {}
tolerations: []
affinity: {}
podDisruptionBudget:
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  enabled: false
  # -- (int/percentage) Number or percentage of pods that must remain available.
  minAvailable: ""
  # -- (int/percentage) Number or percentage of pods that can be unavailable.
  maxUnavailable: ""
