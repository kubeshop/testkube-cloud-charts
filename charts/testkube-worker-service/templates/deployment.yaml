apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testkube-worker-service.fullname" . }}
  labels:
    {{- include "testkube-worker-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "testkube-worker-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "testkube-worker-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- else if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "testkube-worker-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "testkube-worker.image" . }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default .Values.image.pullPolicy }}
          env:
            - name: METRICS_LISTEN_ADDR
              value: "0.0.0.0:9100"
            {{- $natsUri := .Values.global.nats.uri | default .Values.api.nats.uri }}
            - name: NATS_URI
              value: {{ $natsUri | quote }}
            {{- $mongoDsnSecretRef := .Values.global.mongo.dsnSecretRef | default .Values.api.mongo.dsnSecretRef }}
            {{- $mongoDsn := .Values.global.mongo.dsn | default .Values.api.mongo.dsn }}
            {{- if $mongoDsnSecretRef }}
            - name: API_MONGO_DSN
              valueFrom:
                secretKeyRef:
                  key: MONGO_DSN
                  name: {{ $mongoDsnSecretRef }}
            {{- else if $mongoDsn }}
            - name: API_MONGO_DSN
              value: {{ $mongoDsn }}
            {{- end }}
            {{- $mongoDatabase := .Values.global.mongo.database | default .Values.api.mongo.database }}
            - name: API_MONGO_DB
              value: {{ $mongoDatabase }}
            {{- $mongoReadPreference := .Values.global.mongo.readPreference | default .Values.api.mongo.readPreference }}
            - name: API_MONGO_READ_PREFERENCE
              value: {{ $mongoReadPreference }}
            {{- if or .Values.global.customCaSecretRef .Values.customCaDirPath }}
            {{- $certsDir := .Values.customCaDirPath | default "/etc/testkube/certs" }}
            - name: SSL_CERT_DIR
              value: "{{ $certsDir }}"
            {{- end }}
            {{- $outputsBucket := .Values.global.storage.outputsBucket | default .Values.api.outputsBucket }}
            - name: OUTPUTS_BUCKET
              value: "{{ $outputsBucket }}"
           {{- $minioEndpoint := .Values.global.storage.endpoint | default .Values.api.minio.endpoint }}
            - name: MINIO_ENDPOINT
              value: "{{ tpl $minioEndpoint . }}"
            {{- $minioRegion := .Values.global.storage.region | default .Values.api.minio.region }}
            - name: MINIO_REGION
              value: "{{ $minioRegion }}"
            {{- $minioSecure := .Values.global.storage.secure | default .Values.api.minio.secure }}
            - name: MINIO_SSL
              value: "{{ $minioSecure }}"
            {{- $minioSkipVerify := .Values.global.storage.skipVerify | default .Values.api.minio.skipVerify }}
            - name: "MINIO_SKIP_VERIFY"
              value: "{{ $minioSkipVerify }}"
            - name: MINIO_EXPIRATION
              value: "{{ .Values.api.minio.expirationPeriod }}"
            {{- $minioCredsSecretRef := .Values.global.storage.credsSecretRef | default .Values.api.minio.credsSecretRef }}
            - name: MINIO_ACCESS_KEY_ID
              {{- if $minioCredsSecretRef }}
              valueFrom:
                secretKeyRef:
                  key: root-user
                  name: {{ $minioCredsSecretRef }}
              {{- else }}
              {{- $minioAccessKeyId := .Values.global.storage.accessKeyId | default .Values.api.minio.accessKeyId }}
              value: "{{ $minioAccessKeyId }}"
              {{- end }}
            - name: MINIO_SECRET_ACCESS_KEY
              {{- if $minioCredsSecretRef }}
              valueFrom:
                secretKeyRef:
                  key: root-password
                  name: {{ $minioCredsSecretRef }}
              {{- else }}
              {{- $minioSecretAccessKey := .Values.global.storage.secretAccessKey | default .Values.api.minio.secretAccessKey }}
              value: "{{ $minioSecretAccessKey }}"
              {{- end }}
            - name: MINIO_TOKEN
              {{- if $minioCredsSecretRef }}
              valueFrom:
                secretKeyRef:
                  key: token
                  name: {{ $minioCredsSecretRef }}
              {{- else }}
              {{- $minioToken := .Values.global.storage.token | default .Values.api.minio.token }}
              value: "{{ $minioToken }}"
              {{- end }}
            {{- range $k, $v := .Values.additionalEnv }}
            - name: {{ $k }}
              value: "{{ $v }}"
            {{- end}}
            {{- if .Values.externalSecrets.enabled -}}
            {{- range $key, $value := .Values.externalSecrets.keys }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  key: {{ $value }}
                  name: api-external-secrets
            {{ end }}
            {{- end}}
          ports:
            {{- if .Values.prometheus.enabled }}
            - name: metrics
              containerPort: 9100
              protocol: TCP
            {{- end }}
          {{- if .Values.prometheus.enabled }}
          livenessProbe:
            httpGet:
              path: /metrics
              scheme: HTTP
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              scheme: HTTP
              port: metrics
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.global.customCaSecretRef }}
          volumeMounts:
            {{- $certsDir := .Values.customCaDirPath | default "/etc/testkube/certs" }}
            - mountPath: {{ $certsDir }}/testkube-custom-ca.pem
              name: {{ .Values.global.customCaSecretRef }}
              readOnly: true
              subPath: ca.crt
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.global.customCaSecretRef }}
      volumes:
        - name: {{ .Values.global.customCaSecretRef }}
          secret:
            secretName: {{ .Values.global.customCaSecretRef }}
            defaultMode: 420
      {{- end }}
