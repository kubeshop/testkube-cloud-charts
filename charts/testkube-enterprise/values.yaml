# Default values for testkube-enterprise.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Run Testkube in enterprise mode (enables enterprise features)
  enterpriseMode: true
  # -- Enterprise License key
  enterpriseLicenseKey: ""
  # -- Base64-encoded Enterprise License file
  enterpriseLicenseFile: ""
  # -- Enterprise License file secret ref (secret should contain a file called 'license.lic')
  enterpriseLicenseSecretRef: ""
  # -- Toggle whether to enable offline license activation in Enterprise mode
  enterpriseOfflineAccess: false
  # -- Domain under which to create Ingress rules
  domain: ""
  # -- UI subdomain which get prepended to the domain
  uiSubdomain: "dashboard"
  # -- REST API subdomain which get prepended to the domain
  restApiSubdomain: "api"
  # -- gRPC API subdomain which get prepended to the domain
  grpcApiSubdomain: "agent"
  # -- Websocket API subdomain which get prepended to the domain
  websocketApiSubdomain: "websockets"
  # -- TLS provider (possible values: "", "cert-manager")
  certificateProvider: "cert-manager"
  certManager:
    # -- Certificate Issuer ref (only used if `provider` is set to `cert-manager`)
    issuerRef: ""
  # -- Image pull secrets to use for testkube-cloud-api and testkube-cloud-ui
  imagePullSecrets: []
  ingress:
    # -- Global toggle whether to create Ingress resources
    enabled: true
  dex:
    # -- Global Dex issuer url which is configured both in Dex and API
    issuer: "http://testkube-enterprise-dex:5556"
## Testkube Cloud API chart parameters
testkube-cloud-api:
  fullnameOverride: testkube-enterprise-api
  image:
    repository: kubeshop/testkube-enterprise-api
    tag: 1.2.0-dev-81aa874
  api:
    # -- Configure which invitation mode to use (email|auto-accept): email uses SMTP protocol to send email invites and auto-accept immediately adds them
    inviteMode: email
    smtp:
      # -- SMTP host
      host: smtp.sendgrid.net
      # -- SMTP port
      port: 587
      # -- SMTP username
      username: ""
      # -- SMTP password
      password: ""
      # -- SMTP secret ref (secret must contain key SMTP_PASSWORD), overrides password field if defined
      passwordSecretRef: ""
    tls:
      certManager:
        # -- Certificate Issuer kind (only used if `provider` is set to `cert-manager`)
        issuerKind: ClusterIssuer
      tlsSecret: testkube-enterprise-api-tls
    migrations:
      # -- Toggle whether to run database migrations
      enabled: true
      # -- Toggle whether to enable pre-install & pre-upgrade hooks (should be disabled if mongo is installed using this chart)
      useHelmHooks: false
    mongo:
      # -- Mongo DSN connection string
      dsn: "mongodb://testkube-enterprise-mongodb:27017"
      # -- Mongo database name
      database: "testkubeEnterpriseDB"
    nats:
      # -- NATS URI
      uri: "nats://testkube-enterprise-nats:4222"
    minio:
      # -- MinIO endpoint
      endpoint: "testkube-enterprise-minio:9000"
      # -- S3 region
      region: ""
      # -- MinIO access key id
      accessKeyId: "testkube-enterprise"
      # -- MinIO secret access key
      secretAccessKey: "t3stkub3-3nt3rpr1s3"
      # -- MinIO token
      token: ""
      # -- Credentials secret ref (secret should contain keys: MINIO_ACCESS_KEY_ID, MINIO_SECRET_ACCESS_KEY, MINIO_TOKEN) (default is `testkube-cloud-minio-secret`)
      credsSecretRef: ""
      # -- Expiration period in days
      expirationPeriod: 0
      # -- Should be set to `true` if MinIO is exposed through HTTPS
      secure: false
    sendgrid:
      # -- Sendgrid API key
      apiKey: ""
      # -- Secret API key secret ref (secret must contain key SENDGRID_API_KEY) (default is `sendgrid-api-key`)
      secretRef: ""
    agent:
      hide: false
      # -- Agent host (without protocol) is used for building agent install commands (if blank, api will autogenerate it based on the value of `global.domain`)
      host: ""
      # -- Agent port - used for building agent install commands
      port: 443
    oauth:
      # -- OAuth secret ref for OAuth configuration (secret must contain keys: OAUTH_CLIENT_ID, OAUTH_CLIENT_SECRET, OAUTH_ISSUER_URL, OAUTH_REDIRECT_URI) (default is `testkube-cloud-oauth-secret`)
      secretRef: ""
      # -- OAuth Client ID for the configured static client in Dex
      clientId: "testkube-enterprise"
      # -- OAuth Client ID for the configured static client in Dex
      clientSecret: "QWkVzs3nct6HZM5hxsPzwaZtq"
      # -- If oauth.secretRef is empty (""), then oauth.redirectUri field will be used for the OAuth redirect URI
      redirectUri: ""
      # -- if oauth.secretRef is empty (""), then oauth.issuerUrl field will be used for the OAuth issuer URL
      issuerUrl: "http://testkube-enterprise-dex:5556/idp"
    # -- S3 bucket in which to store logs & artifacts
    outputsBucket: testkube-cloud-outputs
  minio:
    fullnameOverride: testkube-enterprise-minio
    # -- Toggle whether to install MinIO
    enabled: true
    # -- Minio extra vars
    extraEnvVars: {}
    # - name: FOO
    #   value: BAR

    # Read more about access modes here: http://kubernetes.io/docs/user-guide/persistent-volumes/#access-modes
    # -- PVC Access Modes for Minio. The volume is mounted as read-write by a single node.
    accessModes:
      - ReadWriteOnce
    # -- Node labels for pod assignment.
    nodeSelector: {}
    # ref: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
    # -- Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
    tolerations: []
    # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    # Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
    # -- Affinity for pod assignment.
    affinity: {}
    # -- Custom service account for MinIO Deployment resource (overrides service account creation)
    customServiceAccountName: ""
    serviceAccount:
      # -- Specifies whether a service account should be created
      create: false
      # -- Additional annotations to add to the ServiceAccount resource
      annotations: {}
      # -- Additional labels to add to the ServiceAccount resource
      labels: {}
      # -- The name of the service account to use.
      name: ""
    credentials:
      # -- Root username
      accessKeyId: "testkube-enterprise"
      # -- Root password
      secretAccessKey: "t3stkub3-3nt3rpr1s3"
    persistence:
      # -- PVC Storage Request for MinIO. Should be available in the cluster.
      storage: 10Gi
    # -- MinIO Resources settings
    resources: {}
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    # -- MinIO Pod Security Context
    podSecurityContext: {}
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    # -- Security Context for MinIO container
    securityContext: {}
  prometheus:
    enabled: true
  ingress:
testkube-cloud-ui:
  fullnameOverride: testkube-enterprise-ui
  image:
    repository: kubeshop/testkube-enterprise-ui
    tag: 1.0.2
  ingress:
    # -- Name of the TLS secret which contains the certificate files
    tlsSecretName: testkube-enterprise-ui-tls
## NATS chart parameter
## For more configuration parameters of NATS chart please look here: https://docs.nats.io/running-a-nats-service/nats-kubernetes/helm-charts
nats:
  fullnameOverride: testkube-enterprise-nats
  tolerations: []
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  # -- NATS Pod Security Context
  securityContext: {}
  cluster:
    # -- Enable cluster mode (HA)
    enabled: true
    # -- NATS cluster replicas
    replicas: 3
  # NATS container settings
  nats:
    enabled: true
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    # -- Security Context for NATS container
    securityContext: {}
    # -- NATS resource settings
    resources: {}
    limits:
      # -- Max payload
      maxPayload: 8MB
  # Reloader container settings
  reloader:
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    # -- Security Context for Reloader container
    securityContext: {}
  # NATS Box container settings
  natsbox:
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    # -- Security Context for NATS Box container
    securityContext: {}
    # -- NATS Box tolerations settings
    tolerations: []
  # Exporter container settings
  exporter:
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    # -- Security Context for Exporter container
    securityContext: {}
    # -- Exporter resources settings
    resources: {}
## MongoDB chart parameters
## For more configuration parameters of MongoDB chart please look here: https://github.com/bitnami/charts/tree/master/bitnami/mongodb#parameters
mongodb:
  # -- Toggle whether to install MongoDB
  enabled: true
  # -- MongoDB fullname override
  fullnameOverride: "testkube-enterprise-mongodb"
  # MongoDB Auth settings
  auth:
    # -- Toggle whether to enable MongoDB authentication
    enabled: false
    # rootPassword: "123DefaultOne321"
  # -- MongoDB resource settings
  resources:
    requests:
      cpu: 150m
      memory: 128Mi
  tolerations: []
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  # -- MongoDB Pod Security Context
  podSecurityContext: {}
  # For OpenShift clusters use the following settings:
  #  fsGroup: 1000670000

  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  # -- Security Context for MongoDB container
  containerSecurityContext: {}
  # For OpenShift clusters use the following settings:
  #  runAsGroup: 1000670000
## Dex chart parameters
## For more configuration parameters of NATS chart please look here: https://github.com/dexidp/helm-charts
dex:
  # -- Toggle whether to install Dex
  enabled: true
  fullnameOverride: testkube-enterprise-dex
  image:
    # -- Dex image tag (https://ghcr.io/dexidp/dex)
    tag: v2.36.0-alpine
  configSecret:
    # -- This should be set to `false` so Dex does not create the config secret. Refer to the `createCustom` field for more info on creating config secret.
    create: false
    # -- Toggle whether to create a custom config secret for Dex (templates/dex-config-secret.yaml). If set to `true`, the `configTemplate` field will be used to generate the config secret.
    createCustom: true
    # -- The name of the secret to mount as configuration in the pod. Set `createCustom: false` and edit the secret manually to use a custom config secret.
    name: "testkube-enterprise-dex-config"
  # -- Inline Dex configuration which will be used to generate the config secret.
  configTemplate:
    # -- If provided, it will completely override the default config (`base` and `additionalConfig`). This is useful if you want to use a custom config file.
    customConfig: ""
    base: |
      logger:
        level: debug
        format: json
      storage:
        type: kubernetes
        config:
          inCluster: true
    # -- Additional config which will be appended to the config like `staticClients`, `staticPasswords ,`connectors`...
    additionalConfig: ""
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  # -- Security Context for MongoDB container
  securityContext: {}
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  # -- MongoDB Pod Security Context
  podSecurityContext:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits: {}
  ingress:
    # -- Toggle whether to enable ingress for Dex
    enabled: true
    # -- Testkube Enterprise supports only NGINX Controller currently
    className: nginx
    hosts:
      - host: 'api.{{ .Values.global.domain }}'
        paths:
          - path: /idp
            pathType: Prefix
    tls:
      - secretName: testkube-enterprise-api-tls
        hosts:
          - 'api.{{ .Values.global.domain }}'
