global:
  ingress:
    enabled: false
  dex:
    issuer: http://localhost:5556
  storage:
    endpoint: "testkube-enterprise-minio:9000"
    region: eu-west-1
    public:
      endpoint: localhost:9000
      secure: false
    credsSecretRef: testkube-minio-credentials
    secure: false
  credentials:
    masterPassword:
      secretKeyRef:
        name: testkube-credentials-master

sharedSecretGenerator:
  enabled: true

testkube-cloud-api:
  additionalEnv:
    OAUTH_CLI_CLIENT_ID: testkube-cloud-cli
    OAUTH_ENABLED: true
    OAUTH_SKIP_DISCOVERY: true
    OAUTH_AUTH_URL: http://localhost:5556/auth
    OAUTH_TOKEN_URL: http://testkube-enterprise-dex:5556/token
    OAUTH_USER_INFO_URL: http://testkube-enterprise-dex:5556/userinfo
    OAUTH_JWKS_URL: http://testkube-enterprise-dex:5556/keys
    DEX_SIGNUP_ORIGIN: testkube-enterprise-dex:5557
  api:
    migrations:
      enabled: true
    features:
      disablePersonalOrgs: true
      bootstrapOrg: "demo"
      bootstrapEnv: "my-first-environment"
      bootstrapAgentTokenSecretRef: "testkube-default-agent-token"
    agent:
      host: "testkube-enterprise-api"
      port: 8089
    tls:
      serveHTTPS: false
    oauth:
      secretRef: ""
      clientId: "testkube-enterprise"
      clientSecret: "QWkVzs3nct6HZM5hxsPzwaZtq"
      redirectUri: "http://localhost:8090/auth/callback"
      issuerUrl: ""
      allowedExternalRedirectURIs: "http://localhost:*"
    dashboardAddress: "http://localhost:8080"
    apiAddress: "http://localhost:8090"
    outputsBucket: testkube-cloud-outputs
  prometheus:
    enabled: false

testkube-cloud-ui:
  ui:
    authStrategy: ""
    apiServerEndpoint: "http://localhost:8090"
    wsServerEndpoint: "ws://localhost:8090"
    rootRoute: "http://testkube-enterprise-ui:8080"
  ai:
    enabled: false
    aiServiceApiUri: "http://testkube-enterprise-ai-service:9090"
  additionalEnv:
    REACT_APP_ENABLE_SIGNUP: "true"

testkube-agent:
  enabled: true
  testkube-dashboard:
    enabled: false
  mongodb:
    enabled: false
  testkube-api:
    cloud:
      url: testkube-enterprise-api:8089
      tls:
        enabled: false
      existingSecret:
        name: testkube-default-agent-token
        key: agent-token

testkube-worker-service:
  additionalEnv:
    USE_MINIO: true

testkube-ai-service:
  enabled: true
  llmApi:
    url: https://llm.testkube.io
  tls:
    serveHTTPS: false

nats:
  config:
    cluster:
      enabled: false

minio:
  auth:
    existingSecret: testkube-minio-credentials

dex:
  ingress:
    enabled: false
  configSecret:
    create: false
    createCustom: true
    name: "testkube-enterprise-dex-config"
  storage:
    type: memory
  grpc:
    enabled: true
  configTemplate:
    customConfig: ""
    additionalStaticClients:
      - id: testkube-enterprise
        redirectURIs:
          - http://localhost:8090/auth/callback
          - http://localhost:38090/auth/callback          
        name: Testkube
        secret: QWkVzs3nct6HZM5hxsPzwaZtq
      - id: testkube-cloud-cli
        name: 'Testkube Enterprise CLI'
        public: true
        redirectURIs:
        - 'http://127.0.0.1:8090/callback'
        - 'http://127.0.0.1:38090/callback'
    additionalConfig: |
      enablePasswordDB: true
      staticPasswords:
        - email: "admin@example.com"
          # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
          hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
          username: "admin"
          userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
