global:
  ingress:
    enabled: false
  dex:
    issuer: http://localhost:5556

sharedSecretGenerator:
  enabled: true

testkube-cloud-api:
  additionalEnv:
    OAUTH_CLI_CLIENT_ID: testkube-cloud-cli
    OAUTH_ENABLED: true
    OAUTH_SKIP_DISCOVERY: true
    OAUTH_AUTH_URL: http://localhost:5556/auth
    OAUTH_TOKEN_URL: http://testkube-enterprise-dex:5556/token
    OAUTH_USER_INFO_URL: http://testkube-enterprise-dex:5556/userinfo
    OAUTH_JWKS_URL: http://testkube-enterprise-dex:5556/keys
    DEX_SIGNUP_ORIGIN: testkube-enterprise-dex:5557
  api:
    features:
      disablePersonalOrgs: true
      bootstrapOrg: "demo"
      bootstrapEnv: "my-first-environment"
      bootstrapAgentTokenSecretRef: "testkube-default-agent-token"
    minio:
      endpoint: "testkube-enterprise-minio:9000"
      credsSecretRef: testkube-minio-credentials
      expirationPeriod: 0
      secure: false
    agent:
      host: "testkube-enterprise-api:grpcs"
      port: 80
    tls:
      serveHTTPS: false
    oauth:
      secretRef: ""
      clientId: "testkube-enterprise"
      clientSecret: "QWkVzs3nct6HZM5hxsPzwaZtq"
      redirectUri: "http://localhost:8090/auth/callback"
      issuerUrl: ""
    dashboardAddress: "http://localhost:8080"
    apiAddress: "http://localhost:8090"
    outputsBucket: testkube-cloud-outputs
  prometheus:
    enabled: false

testkube-cloud-ui:
  fullnameOverride: testkube-enterprise-ui
  ui:
    authStrategy: ""
    apiServerEndpoint: "http://localhost:8090"
    rootRoute: "http://testkube-enterprise-ui:8080"
  additionalEnv:
    REACT_APP_ENABLE_SIGNUP: "true"

testkube-agent:
  enabled: true
  testkube-dashboard:
    enabled: false
  mongodb:
    enabled: false
  testkube-api:
    cloud:
      url: testkube-enterprise-api:8089
      tls:
        enabled: false
      existingSecret:
        name: testkube-default-agent-token
        key: agent-token

testkube-worker-service:
  api:
    minio:
      endpoint: "testkube-enterprise-minio:9000"
      credsSecretRef: testkube-minio-credentials
      secure: false
  additionalEnv:
    USE_MINIO: true

nats:
  fullnameOverride: testkube-enterprise-nats
  config:
    cluster:
      enabled: false
    jetstream:
      enabled: true

mongodb:
  enabled: true
  image:
    registry: docker.io
    repository: zcube/bitnami-compat-mongodb
    tag: 6.0.5
  resources:
    requests:
      cpu: 150m
      memory: 128Mi

minio:
  auth:
    existingSecret: testkube-minio-credentials

dex:
  ingress:
    enabled: false
  configSecret:
    create: false
    createCustom: true
    name: "testkube-enterprise-dex-config"
  storage:
    type: memory
  grpc:
    enabled: true
  configTemplate:
    customConfig: ""
    base: |
      logger:
        level: debug
        format: json
      web:
        http: 0.0.0.0:5556
      expiry:
        deviceRequests: "5m"
        signingKeys: "6h"
        idTokens: "24h"
        refreshTokens:
          disableRotation: false
          reuseInterval: "3s"
          validIfNotUsedFor: "2160h" # 90 days
          absoluteLifetime: "3960h" # 165 days
      oauth2:
        responseTypes: ["code"]
        skipApprovalScreen: true
        alwaysShowLoginScreen: false
        passwordConnector: local
    additionalStaticClients: []
    additionalConfig: |
      staticClients:
      - id: testkube-enterprise
        redirectURIs:
          - http://localhost:8090/auth/callback
        name: Testkube
        secret: QWkVzs3nct6HZM5hxsPzwaZtq
      enablePasswordDB: true
      staticPasswords:
        - email: "admin@example.com"
          # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
          hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
          username: "admin"
          userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"