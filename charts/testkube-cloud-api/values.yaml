# Default values for testkube-cloud-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Toggle whether UI is installed in Enterprise mode
  enterpriseMode: false
  # -- Toggle whether to enable offline license activation in Enterprise mode
  enterpriseOfflineAccess: false
  # -- Specifies the enterprise license key, when using an offline license use `enterpriseLicenseSecretRef` and leave this field empty.
  enterpriseLicenseKey: ""
  # -- This field is deprecated. To specify an offline license file use `enterpriseLicenseSecretRef`.
  enterpriseLicenseFile: ""
  # -- Enterprise license file secret reference. Place the license key under the key `LICENSE_KEY` key in the secret, and in case of an offline license place the license file under the key `license.lic` in the same secret. Make sure that the license key file does not have any new line characters at the end of the file.
  enterpriseLicenseSecretRef: ""
  # -- Domain under which endpoints are exposed
  domain: ""
  # -- UI subdomain which get prepended to the domain
  uiSubdomain: "cloud"
  # -- REST API subdomain which get prepended to the domain
  restApiSubdomain: "api"
  # -- gRPC API subdomain which get prepended to the domain
  grpcApiSubdomain: "agent"
  # -- gRPC Logs subdomain which get prepended to the domain
  grpcLogsSubdomain: "logs"
  # -- Websocket API subdomain which get prepended to the domain
  websocketApiSubdomain: "websockets"
  # -- Storage API subdomain which get prepended to the domain
  storageApiSubdomain: "storage"
  # -- TLS provider (possible values: "", "cert-manager")
  certificateProvider: ""
  certManager:
    # -- Certificate Issuer ref (only used if `provider` is set to `cert-manager`)
    issuerRef: ""
  # -- Custom CA to use as a trusted CA during TLS connections. Specify a secret with the PEM encoded CA under the ca.crt key.
  customCaSecretRef: ""
  # -- Global image pull secrets (provided usually by a parent chart like testkube-enterprise)
  imagePullSecrets: []
  ingress:
    # -- Toggle whether to enable or disable all Ingress resources (if false, all Ingress resources will be disabled and cannot be overriden)
    enabled: true
  dex:
    # -- Global Dex issuer url
    issuer: ""
  # -- Common labels which will be added to all resources
  labels: {}
  ## Global MongoDB configuration for Testkube Pro API
  mongo:
    # -- Mongo DSN connection string
    dsn: ""
    # -- Mongo DSN connection string secret ref (secret must contain key MONGO_DSN) (default is `mongo-dsn`)
    dsnSecretRef: ""
    # -- Mongo database name
    database: ""
    # -- Mongo read preference (primary|primaryPreferred|secondary|secondaryPreferred|nearest)
    readPreference: ""
    # -- Allow or prohibit writing temporary files on disk when a pipeline stage exceeds the 100 megabyte limit.
    allowDiskUse: false
  ## Global NATS configuration for Testkube Pro API
  nats:
    # -- NATS URI
    uri: ""
  ## Global S3 configuration for Testkube Pro
  storage:
    # -- S3 bucket in which Test Artifacts & Logs will be stored
    outputsBucket: ""
    # -- Endpoint to a S3 compatible storage service (without protocol)
    endpoint: ""
    # -- S3 region
    region: ""
    # -- Toggle whether to use HTTPS when connecting to the S3 server
    secure: null
    # -- Toggle whether to skip verifying TLS certificates
    skipVerify: null
    # -- S3 Access Key ID
    accessKeyId: ""
    # -- S3 Secret Access Key
    secretAccessKey: ""
    # -- S3 Token
    token: ""
    # -- Credentials secret ref (secret should contain keys: root-user, root-password, token) (default is `testkube-cloud-minio-secret`)
    credsSecretRef: ""
replicaCount: 1
image:
  repository: kubeshop/testkube-cloud-api
  pullPolicy: IfNotPresent
  tag: "1.10.21"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
# -- Additional env vars to be added to the deployment
additionalEnv: {}
# FOO: bar

# -- Api can allow to set demo organization id where user who don't have Kubernetes cluster can play around
demoOrganizationId: ""
analytics:
  segmentio:
    # -- Toggle whether to enable Segment.io analytics
    enabled: false
    # -- Segment.io write key
    writeKey: ""
    # -- Segment.io secret ref (secret must contain key SEGMENTIO_WRITE_KEY) (default is `testkube-cloud-analytics-secret`)
    secretRef: ""
  hubspot:
    # -- Toggle whether to enable HubSpot sync
    enabled: false
    # -- HubSpot write key
    apiKey: ""
    # -- HubSpot secret ref (secret must contain key HUBSPOT_API_KEY) (default is `testkube-cloud-analytics-secret`)
    secretRef: ""
ai:
  # -- AI config secret ref
  secretRef: "openai-api-key"
  secretKey: "key"
  # -- or use api key instead two above
  apiKey: ""
payments:
  # -- Toggle whether to enable payments service
  enabled: false
  # -- Payments config secret ref (secret must contain keys: PAYMENTS_PORTAL_CONFIGURATION_ID, PAYMENTS_ENDPOINT_SECRET and PAYMENTS_API_KEY) (default is `testkube-cloud-payments-secret`)
  secretRef: ""
  # -- Payments API key (currently only Stripe is supported)
  apiKey: ""
  # -- Payments endpoint secret (currently only Stripe is supported)
  endpointSecret: ""
  # -- Payments portal configuration ID (currently only Stripe is supported)
  portalConfigurationId: ""
api:
  debug:
    # -- Toggle whether to enable debug logs by setting the GODEBUG=http2debug=2
    enableHttp2Logs: false
    # -- Toggle whether to enable gRPC server logs
    enableGrpcServerLogs: false
  migrations:
    # -- Toggle whether to apply migrations for MongoDB
    enabled: false
    # -- Toggle whether to enable pre-install & pre-upgrade hooks
    useHelmHooks: true
    # -- TTL for the migration job
    ttlSecondsAfterFinished: 90
  features:
    disablePersonalOrgs: false
    bootstrapConfig:
      enabled: false
      config: {}
  # -- Configure which invitation mode to use (email|auto-accept): email uses SMTP protocol to send email invites and auto-accept immediately adds them
  inviteMode: auto-accept
  email:
    # -- Email to use for sending outgoing emails
    fromEmail: ""
    # -- Name to use for sending outgoing emails
    fromName: ""
  smtp:
    # -- SMTP host
    host: ""
    # -- SMTP port
    port: 587
    # -- SMTP username
    username: ""
    # -- SMTP password
    password: ""
    # -- SMTP secret ref (secret must contain key SMTP_PASSWORD), overrides password field if defined
    passwordSecretRef: ""
  sendgrid:
    # -- Sendgrid API key
    apiKey: ""
    # -- Secret API key secret ref (secret must contain key SENDGRID_API_KEY)
    secretRef: ""
  tls:
    # -- Toggle should the Application terminate TLS instead of the Ingress
    serveHTTPS: true
    # -- API HTTPS port
    apiPort: 9443
    # -- Agent gRPCS port
    agentPort: 8443
    # -- TLS secret name which contains the certificate files
    tlsSecret: testkube-cloud-api-tls
    certManager:
      # -- Certificate Issuer kind (only used if `provider` is set to `cert-manager`)
      issuerKind: ClusterIssuer
      # -- Certificate Issuer group (only used if `provider` is set to `cert-manager`)
      issuerGroup: cert-manager.io
    # -- certificate path
    certPath: /tmp/serving-cert/crt.pem
    # -- certificate key path
    keyPath: /tmp/serving-cert/key.pem
  # -- S3 bucket in which outputs are stored
  outputsBucket: testkube-cloud-outputs
  # -- API address (used in invitation emails) (example `https://api.testkube.xyz`)
  apiAddress: ""
  # -- Dashboard address (used in invitation emails) (example `https://cloud.testkube.xyz`)
  dashboardAddress: ""
  # -- Different UI subdomain which gets prepended to the domain. May be used for the redirect from your actual uiSubdomain endpoint. Works is ingressRedirect option is enabled.
  redirectSubdomain: ""
  mongo:
    # -- Mongo DSN connection string secret ref (secret must contain key MONGO_DSN) (default is `mongo-dsn`)
    dsnSecretRef: ""
    # -- if mongoDsnSecretRef is empty (""), mongoDsn field will be used for setting the Mongo DSN connection string
    dsn: "mongodb://mongodb.testkube.svc.cluster.local:27017"
    # -- Mongo database name
    database: "testkubecloud"
    # -- Mongo read preference (primary|primaryPreferred|secondary|secondaryPreferred|nearest)
    readPreference: secondaryPreferred
  nats:
    # -- NATS URI
    uri: "nats://nats.messaging.svc.cluster.local:4222"
  minio:
    # -- MinIO endpoint
    endpoint: "minio.testkube.svc.cluster.local:9000"
    # -- S3 region
    region: ""
    # -- MinIO access key id
    accessKeyId: ""
    # -- MinIO secret access key
    secretAccessKey: ""
    # -- MinIO token
    token: ""
    # -- Credentials secret ref (secret should contain keys: root-user, root-password, token) (default is `testkube-cloud-minio-secret`)
    credsSecretRef: ""
    # -- Expiration period in days
    expirationPeriod: 0
    # -- Should be set to `true` if MinIO is behind
    secure: false
    # -- Toggle whether to verify TLS certificates
    skipVerify: false
    # -- If enabled, will also require a CA certificate to be provided
    mountCACertificate: false
    # Configure this if you want a different hostname for the presigned PUT URL (used by Agents to upload artifacts)
    signing:
      # -- Hostname for the presigned PUT URL
      hostname: ""
      # -- Toggle should the presigned URL use HTTPS
      secure: false
    certSecret:
      # -- Toggle whether to mount k8s secret which contains storage client certificate (cert.crt, cert.key, ca.crt)
      enabled: false
      # -- Name of the storage client certificate secret
      name: "storage-client-cert"
      # -- Base path to mount the client certificate secret
      baseMountPath: /etc/client-certs/storage
      # -- Path to client certificate file
      certFile: "cert.crt"
      # -- Path to client certificate key file
      keyFile: "cert.key"
      # -- Path to ca file (used for self-signed certificates)
      caFile: "ca.crt"
  agent:
    healthcheck:
      # -- Agent healthcheck distributed mode (one of mongo|kv) - used for pods sync to run healthchecks on single pod at once
      lock: kv
    hide: false
    # -- Agent host with protocol (example `agent.testkube.xyz`)
    host: ""
    # -- Agent port
    port: "443"
    # -- Toggle whether to enable agent grpc keepalive pings
    keepAlive: false
  oauth:
    # -- OAuth secret ref for OAuth configuration (secret must contain keys: OAUTH_CLIENT_ID, OAUTH_CLIENT_SECRET, OAUTH_ISSUER_URL, OAUTH_REDIRECT_URI) (default is `testkube-cloud-oauth-secret`)
    secretRef: ""
    # -- if oauth.secretRef is empty (""), then oauth.clientId field will be used for the OAuth client ID
    clientId: ""
    # -- if oauth.secretRef is empty (""), then oauth.clientId field will be used for the OAuth cli client ID
    cliClientId: ""
    # -- if oauth.secretRef is empty (""), then oauth.clientSecret field will be used for the OAuth client secret
    clientSecret: ""
    # -- if oauth.secretRef is empty (""), then oauth.issuerUrl field will be used for the OAuth issuer URL
    issuerUrl: ""
    # -- if oauth.secretRef is empty (""), then oauth.redirectUri field will be used for the OAuth redirect URI
    redirectUri: ""
    # -- Comma-separated list of allowed external redirect URIs (example: `https://cloud.testkube.xyz,http://localhost:3000`)
    allowedExternalRedirectURIs: ""
  # -- External log server connection configuration
  logServer:
    # -- Toggle whether to enable external log server connection
    enabled: false
    # -- Log server address for internal communication
    grpcAddress: "testkube-logs-service:8089"
    # -- Log server TLS configuration secure connection
    secure: "false"
    # -- Log server TLS configuration skip Verify
    skipVerify: "true"
    # -- TLS certificate file
    certFile: ""
    # -- TLS key file
    keyFile: ""
    # -- TLS CA certificate file
    caFile: ""
    # -- Log server address for external communication (example `logs.testkube.xyz`)
    host: ""
    # -- Log server port for external communication
    port: "443"
externalSecrets:
  enabled: false
  refreshInterval: 5m
  clusterSecretStoreName: secret-store
  keys: {}
serviceAccount:
  # -- Toggle whether to create a ServiceAccount resource
  create: false
  # -- Additional labels to add to the ServiceAccount resource
  labels: {}
  # -- Additional annotations to add to the ServiceAccount resource
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
# -- Pod Security Context
podSecurityContext: {}
# fsGroup: 2000

# -- Security Context for app container
securityContext:
  readOnlyRootFilesystem: true
service:
  # -- Service type
  type: ClusterIP
  # -- Additional annotations to add to the Service resource
  annotations: {}
  # -- Additional labels to add to the Service resource
  labels: {}
  # -- REST API port
  port: 8088
  # -- gRPC/Agent API port
  grpcPort: 8089
  # -- Metrics port
  metricsPort: 9000
ingress:
  # -- Common Ingress class name (NGINX is the only officially supported ingress controller and should not be changed)
  className: nginx
restIngress:
  # -- Toggle whether to enable the REST API Ingress
  enabled: true
  # -- Additional labels to add to the REST Ingress resource
  labels: {}
  # -- Additional annotations to add to the REST Ingress resource
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # -- Hostname for which to create rules and TLS certificates (if omitted, the host will be generated using the global subdomain and `domain` values)
  host: ""
grpcIngress:
  # -- Toggle whether to enable the gRPC API Ingress
  enabled: true
  # -- Additional labels to add to the gRPC Ingress resource
  labels: {}
  # -- Additional annotations to add to the gRPC Ingress resource
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # -- Max payload size for proxied gRPC API
  maxPayloadSize: 16m
  # -- Hostname for which to create rules and TLS certificates (if omitted, the host will be generated using the global subdomain and `domain` values)
  host: ""
websocketsIngress:
  # -- Toggle whether to enable the Websocket API Ingress
  enabled: true
  # -- Additional labels to add to the WebSocket Ingress resource
  labels: {}
  # -- Additional annotations to add to the WebSocket Ingress resource
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # -- Hostname for which to create rules and TLS certificates (if omitted, the host will be generated using the global subdomain and `domain` values)
  host: ""
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  # -- It is strongly recommended to set limits for both cpu and memory
  limits: {}
autoscaling:
  # -- Toggle whether to enable Horizontal Pod Autoscaler
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
prometheus:
  # -- Toggle whether to create ServiceMonitor resource for Prometheus Operator
  enabled: true
  # -- ServiceMonitor labels
  labels: {}
  # -- Scrape interval configuration in ServiceMonitor resource
  scrapeInterval: 15s
  # -- Metrics port which will be scraper
  port: metrics
  # -- Metrics path which will be scraped
  path: /metrics
nodeSelector: {}
tolerations: []
affinity: {}
##Test Connection pod
testConnection:
  enabled: false
