# Default values for testkube-cloud-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Cloud API is currently not scalable due to certain issues with Agent & gRPC connection
replicaCount: 1

image:
  repository: kubeshop/testkube-cloud-api
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "0.2.89"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

analytics:
  segmentio:
    writeKey: ""
    secretRef: "testkube-cloud-analytics-secret"

payments:
  secretRef: "testkube-cloud-payments-secret"
  apiKey: ""
  endpointSecret: ""
  portalConfigurationId: ""

api:
  migrations:
    # -- Toggle whether to apply migrations for MongoDB
    enabled: false
    image:
      repository: kubeshop/testkube-cloud-api-migrations
  tls:
    # -- Toggle whether to handle TLS in API
    enabled: false
    # -- API HTTPS port
    apiPort: 9443
    # -- Agent gRPCS port
    agentPort: 8443
    # -- tls secret name which ClusterIssuer will use to store certificate data
    tlsSecret: testkube-cloud-api-tls
    # -- cert-manager ClusterIssuer ref
    issuerRef: letsencrypt-dev
    # -- certificate path
    certPath: /tmp/serving-cert/crt.pem
    # -- certificate key path
    keyPath: /tmp/serving-cert/key.pem
    # -- certificate domains
    domains: []
  #      - api.testkube.xyz
  #      - agent.testkube.xyz
  # -- S3 bucket in which outputs are stored
  outputsBucket: testkube-cloud-outputs
  # -- API address (used in invitation emails)
  apiAddress: localhost:8088
  # -- Dashboard address (used in invitation emails
  dashboardAddress: localhost:3000
  # -- Mongo DSN connection string secret ref (secret must contain key MONGO_DSN)
  mongoDsnSecretRef: mongo-dsn
  # -- if mongoDsnSecretRef is empty (""), mongoDsn field will be used for setting the Mongo DSN connection string
  mongoDsn: "mongodb://mongodb.testkube.svc.cluster.local:27017"
  # -- Mongo database name
  mongoDb: "testkubecloud"
  # -- NATS URI
  natsUri: "nats://nats.messaging.svc.cluster.local:4222"
  sendgrid:
    # -- Sendgrid API key
    apiKey: ""
    # -- Name of secret which contains SENDGRID_API_KEY key
    secretRef: ""
  agent:
    hide: false
    # -- Agent host (without protocol)
    host: localhost
    # -- Agent port
    port: 8089
  oauth:
    # -- OAuth secret ref for OAuth configuration (secret must contain keys: OAUTH_CLIENT_ID, OAUTH_CLIENT_SECRET, OAUTH_ISSUER_URL, OAUTH_REDIRECT_URI)
    secretRef: ""
    # -- if oauth.secretRef is empty (""), then oauth.clientId field will be used for the OAuth client ID
    clientId: ""
    # -- if oauth.secretRef is empty (""), then oauth.clientSecret field will be used for the OAuth client secret
    clientSecret: ""
    # -- if oauth.secretRef is empty (""), then oauth.issuerUrl field will be used for the OAuth issuer URL
    issuerUrl: ""
    # -- if oauth.secretRef is empty (""), then oauth.redirectUri field will be used for the OAuth redirect URI
    redirectUri: ""
    # -- Comma-separated list of allowed external redirect URIs
    allowedExternalRedirectURIs: "https://cloud.testkube.xyz"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8088
  grpcPort: 8089
  metricsPort: 9000

ingress:
  enabled: false
  className: "nginx"
  labels:
    kubernetes.io/ingress.class: nginx
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #  - host: testkube-cloud-api.testkube.svc.cluster.local
  #    paths:
  #      - path: /
  #        pathType: Prefix
  #        svcPort: 8088
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  #
grpcIngress:
  enabled: false
  className: "nginx"
  labels:
    kubernetes.io/ingress.class: nginx
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #  - host: testkube-cloud-api.testkube.svc.cluster.local
  #    paths:
  #      - path: /
  #        pathType: Prefix
  #        svcPort: 8088
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
websocketsIngress:
  enabled: false
  className: "nginx"
  labels:
    kubernetes.io/ingress.class: nginx
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
     location / {
      proxy_set_header Upgrade $http_upgrade;
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
      }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #  - host: testkube-cloud-api.testkube.svc.cluster.local
  #    paths:
  #      - path: /
  #        pathType: Prefix
  #        svcPort: 8088
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 300m
    memory: 320Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

prometheus:
  enabled: false
  labels: {}
  scrapeInterval: 15s
  port: metrics
  path: /metrics

nodeSelector: {}

tolerations: []

affinity: {}
