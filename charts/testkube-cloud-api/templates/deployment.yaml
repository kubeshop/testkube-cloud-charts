apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testkube-cloud-api.fullname" . }}
  labels:
    {{- include "testkube-cloud-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "testkube-cloud-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "testkube-cloud-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- else if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "testkube-cloud-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{ include "testkube-cloud-api.envs" . | nindent 12 }} 
            {{- range $k, $v := .Values.additionalEnv }}
            - name: {{ $k }}
              value: "{{ $v }}"
            {{- end}}
          ports:
            - name: {{ if .Values.api.tls.serveHTTPS }}https{{ else }}http{{ end }}
              containerPort: {{ if .Values.api.tls.serveHTTPS }}{{ .Values.api.tls.apiPort }}{{ else }}8090{{ end }}
              protocol: TCP
            - name: {{ if .Values.api.tls.serveHTTPS }}grpcs{{ else }}grpc{{ end }}
              containerPort: {{ if .Values.api.tls.serveHTTPS }}{{ .Values.api.tls.agentPort }}{{ else }}8089{{ end }}
              protocol: TCP
            {{- if .Values.prometheus.enabled }}
            - name: metrics
              containerPort: 9100
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              scheme: {{ if .Values.api.tls.serveHTTPS }}HTTPS{{ else }}HTTP{{ end }}
              port: {{ if .Values.api.tls.serveHTTPS }}https{{ else }}http{{ end }}
          readinessProbe:
            httpGet:
              path: /health
              scheme: {{ if .Values.api.tls.serveHTTPS }}HTTPS{{ else }}HTTP{{ end }}
              port: {{ if .Values.api.tls.serveHTTPS }}https{{ else }}http{{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.api.tls.serveHTTPS .Values.global.enterpriseLicenseSecretRef }}
          volumeMounts:
            {{- if .Values.api.tls.serveHTTPS }}
            - mountPath: /tmp/serving-cert/crt.pem
              readOnly: true
              name: serving-cert
              subPath: tls.crt
            - mountPath: /tmp/serving-cert/key.pem
              readOnly: true
              name: serving-cert
              subPath: tls.key
            {{- end }}
            {{- if and .Values.global.enterpriseLicenseSecretRef .Values.global.enterpriseOfflineAccess }}
            - mountPath: /testkube/license.lic
              readOnly: true
              name: license-file
              subPath: license.lic
            {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.api.tls.serveHTTPS .Values.global.enterpriseLicenseSecretRef }}
      volumes:
        {{- if .Values.api.tls.serveHTTPS }}
        - name: serving-cert
          secret:
            secretName: {{ .Values.api.tls.tlsSecret }}
        {{- end }}
        {{- if and .Values.global.enterpriseLicenseSecretRef .Values.global.enterpriseOfflineAccess }}
        - name: license-file
          secret:
            secretName: {{ .Values.global.enterpriseLicenseSecretRef }}
        {{- end }}
      {{- end }}
