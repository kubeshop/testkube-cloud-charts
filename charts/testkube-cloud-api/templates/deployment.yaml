apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testkube-cloud-api.fullname" . }}
  labels:
    {{- include "testkube-cloud-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "testkube-cloud-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "testkube-cloud-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- else if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      serviceAccountName: {{ include "testkube-cloud-api.serviceAccountName" . }}
      securityContext: {{ include "testkube-cloud-api.podSecurityContext" . | nindent 8 }}
      {{- if .Values.init.enabled }}
      initContainers:
        - name: wait-for-mongo
          image: {{ include "testkube-cloud-api.init-mongo-image" . }}
          imagePullPolicy: {{ .Values.init.mongo.image.pullPolicy }}
          securityContext: {{ include "init-wait-for-mongo.containerSecurityContext" . | nindent 12 }}
          command: ["/testkube/toolbox"]
          args: ["database", "status", "--wait"]
          env:
            - name: API_MONGO_DSN
              {{- if (or .Values.global.mongo.dsnSecretRef .Values.api.mongo.dsnSecretRef) }}
              valueFrom:
                secretKeyRef:
                  key: MONGO_DSN
                  name: {{ .Values.global.mongo.dsnSecretRef | default .Values.api.mongo.dsnSecretRef }}
              {{- else }}
              value: {{ .Values.global.mongo.dsn | default .Values.api.mongo.dsn }}
              {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{ include "testkube-cloud-api.containerSecurityContext" . | nindent 12 }}
          image: {{ include "testkube-api.image" . }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default .Values.image.pullPolicy }}
          env:
            - name: DEMO_ORGANIZATION_ID
              value: "{{ .Values.demoOrganizationId }}"
            - name: ENTERPRISE_MODE
              value: "{{ .Values.global.enterpriseMode }}"
            {{- if .Values.global.enterpriseMode }}
            - name: ENTERPRISE_OFFLINE_ACTIVATION
              value: "{{ .Values.global.enterpriseOfflineAccess }}"
            - name: ENTERPRISE_LICENSE_KEY_PATH
              value: "{{ .Values.enterpriseLicenseKeyPath }}"
            - name: ENTERPRISE_LICENSE_FILE_PATH
              value: "{{ .Values.enterpriseLicenseFilePath }}"
            {{ if or .Values.global.enterpriseLicenseSecretRef .Values.global.enterpriseLicenseKey }}
            - name: ENTERPRISE_LICENSE_KEY
              {{- if .Values.global.enterpriseLicenseSecretRef }}
              valueFrom:
                secretKeyRef:
                  key: LICENSE_KEY
                  name: {{ .Values.global.enterpriseLicenseSecretRef }}
              {{- else }}
              value: "{{ .Values.global.enterpriseLicenseKey }}"
              {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.global.enterpriseLicenseFile }}
            - name: ENTERPRISE_LICENSE_FILE
              value: "{{ .Values.global.enterpriseLicenseFile }}"
            {{- end }}
            {{- if .Values.api.debug.enableHttp2Logs }}
            - name: GODEBUG
              value: http2debug=2
            {{- end }}
            {{- if .Values.api.debug.enableGrpcServerLogs }}
            - name: ENABLE_GRPC_VERBOSE_LOGGING
              value: "true"
            {{- end }}
            {{- if .Values.api.agent.keepAlive }}
            - name: ENABLE_GRPC_KEEP_ALIVE
              value: "true"
            {{- end }}
            {{- if .Values.ai.secretRef }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.ai.secretKey }}
                  name: {{ .Values.ai.secretRef }}
            {{- else if .Values.ai.apiKey }}
            - name: OPENAI_API_KEY
              value: "{{ .Values.ai.apiKey }}"
            {{- end }}
            - name: HEALTHCHECK_DISTRIBUTED_LOCK
              value: "{{ .Values.api.agent.healthcheck.lock }}"
            - name: INVITE_MODE
              value: "{{ .Values.api.inviteMode }}"
            {{- if eq .Values.api.inviteMode "email" }}
            {{- $check := required ".Values.api.email needs to be configured with .Values.api.inviteMode set to \"email\"" .Values.api.email -}}
            {{- if not (or .Values.api.sendgrid.secretRef .Values.api.sendgrid.apiKey) }}
            {{- $check := required ".Values.api.smtp needs to be configured with .Values.api.inviteMode set to \"email\"" .Values.api.smtp }}
            - name: FROM_EMAIL
              value: "{{ required ".Values.api.email.fromEmail is required with .Values.api.inviteMode set to \"email\"" .Values.api.email.fromEmail }}"
            - name: FROM_NAME
              value: "{{ required ".Values.api.email.fromName is required with .Values.api.inviteMode set to \"email\"" .Values.api.email.fromName }}"
            - name: SMTP_HOST
              value: "{{ required ".Values.api.smtp.host is required with .Values.api.inviteMode set to \"email\"" .Values.api.smtp.host }}"
            - name: SMTP_PORT
              value: "{{ required ".Values.api.smtp.port is required with .Values.api.inviteMode set to \"email\"" .Values.api.smtp.port }}"
            - name: SMTP_USER
              value: "{{ required ".Values.api.smtp.username is required with .Values.api.inviteMode set to \"email\"" .Values.api.smtp.username }}"
            - name: SMTP_PASS
              {{- if .Values.api.smtp.passwordSecretRef }}
              valueFrom:
                secretKeyRef:
                  key: SMTP_PASS
                  name: {{ .Values.api.smtp.passwordSecretRef }}
              {{- else }}
              value: "{{ required ".Values.api.smtp.password or .Values.api.smtp.passwordSecretRef is required with .Values.api.inviteMode set to \"email\"" .Values.api.smtp.password }}"
              {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.api.sendgrid.secretRef }}
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  key: SENDGRID_API_KEY
                  name: {{ .Values.api.sendgrid.secretRef }}
            {{- else if .Values.api.sendgrid.apiKey }}
            - name: SENDGRID_API_KEY
              value: "{{ .Values.api.sendgrid.apiKey }}"
            {{- end }}
            - name: ROOT_DOMAIN
              value: "{{ .Values.global.domain }}"
            - name: METRICS_LISTEN_ADDR
              value: "0.0.0.0:9100"
            {{- if .Values.payments.enabled }}
            - name: PAYMENTS_PORTAL_CONFIGURATION_ID
              {{- if .Values.payments.secretRef }}
              valueFrom:
                secretKeyRef:
                  key: PAYMENTS_PORTAL_CONFIGURATION_ID
                  name: {{ .Values.payments.secretRef }}
              {{- else }}
              value: {{ .Values.payments.portalConfigurationId }}
              {{- end }}
            - name: PAYMENTS_ENDPOINT_SECRET
              {{- if .Values.payments.secretRef }}
              valueFrom:
                secretKeyRef:
                  key: PAYMENTS_ENDPOINT_SECRET
                  name: {{ .Values.payments.secretRef }}
              {{- else }}
              value: {{ .Values.payments.endpointSecret }}
              {{- end }}
            - name: PAYMENTS_API_KEY
              {{- if .Values.payments.secretRef }}
              valueFrom:
                secretKeyRef:
                  key: PAYMENTS_API_KEY
                  name: {{ .Values.payments.secretRef }}
              {{- else }}
              value: {{ .Values.payments.apiKey }}
              {{- end }}
            {{- end }}
            {{- if .Values.analytics.segmentio.enabled }}
            - name: SEGMENTIO_WRITE_KEY
              {{- if .Values.analytics.segmentio.secretRef }}
              valueFrom:
                secretKeyRef:
                  key: SEGMENTIO_WRITE_KEY
                  name: {{ .Values.analytics.segmentio.secretRef }}
              {{- else }}
              value: {{ .Values.analytics.segmentio.writeKey }}
              {{- end }}
            {{- end }}
            {{- if .Values.analytics.hubspot.enabled }}
            - name: HUBSPOT_API_KEY
              {{- if .Values.analytics.hubspot.secretRef }}
              valueFrom:
                secretKeyRef:
                  key: HUBSPOT_API_KEY
                  name: {{ .Values.analytics.hubspot.secretRef }}
              {{- else }}
              value: {{ .Values.analytics.hubspot.apiKey }}
              {{- end }}
            {{- end }}
            {{- $mongoDsnSecretRef := .Values.global.mongo.dsnSecretRef | default .Values.api.mongo.dsnSecretRef }}
            {{- $mongoDsn := .Values.global.mongo.dsn | default .Values.api.mongo.dsn }}
            {{- if $mongoDsnSecretRef }}
            - name: API_MONGO_DSN
              valueFrom:
                secretKeyRef:
                  key: MONGO_DSN
                  name: {{ $mongoDsnSecretRef }}
            {{- else if $mongoDsn }}
            - name: API_MONGO_DSN
              value: {{ $mongoDsn }}
            {{- end }}
            {{- $mongoDatabase := .Values.global.mongo.database | default .Values.api.mongo.database }}
            - name: API_MONGO_DB
              value: {{ $mongoDatabase }}
            {{- $mongoReadPreference := .Values.global.mongo.readPreference | default .Values.api.mongo.readPreference }}
            - name: API_MONGO_READ_PREFERENCE
              value: {{ $mongoReadPreference }}
              {{- if .Values.api.oauth.secretRef }}
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: OAUTH_CLIENT_ID
                  name: {{ .Values.api.oauth.secretRef }}
              {{- else if .Values.api.oauth.clientId }}
            - name: OAUTH_CLIENT_ID
              value: "{{ .Values.api.oauth.clientId }}"
              {{- end }}
              {{- if .Values.api.oauth.secretRef }}
            - name: OAUTH_CLI_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: OAUTH_CLI_CLIENT_ID
                  name: {{ .Values.api.oauth.secretRef }}
              {{- else if .Values.api.oauth.cliClientId }}
            - name: OAUTH_CLI_CLIENT_ID
              value: "{{ .Values.api.oauth.cliClientId }}"
              {{- end }}
              {{- if .Values.api.oauth.secretRef }}
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: OAUTH_CLIENT_SECRET
                  name: {{ .Values.api.oauth.secretRef }}
              {{- else if .Values.api.oauth.clientSecret }}
            - name: OAUTH_CLIENT_SECRET
              value: "{{ .Values.api.oauth.clientSecret }}"
              {{- end }}
              {{- if .Values.api.oauth.secretRef }}
            - name: OAUTH_ISSUER_URL
              valueFrom:
                secretKeyRef:
                  key: OAUTH_ISSUER_URL
                  name: {{ .Values.api.oauth.secretRef }}
              {{- else }}
            - name: OAUTH_ISSUER_URL
              value: {{ if .Values.global.dex.issuer}}{{ .Values.global.dex.issuer }}{{ else if .Values.api.oauth.issuerUrl }}{{ .Values.api.oauth.issuerUrl }}{{ else }}https://{{ .Values.global.restApiSubdomain }}.{{ .Values.global.domain }}/idp{{ end }}
              {{- end }}
              {{- if .Values.api.oauth.secretRef }}
            - name: OAUTH_REDIRECT_URI
              valueFrom:
                secretKeyRef:
                  key: OAUTH_REDIRECT_URI
                  name: {{ .Values.api.oauth.secretRef }}
              {{- else }}
            - name: OAUTH_REDIRECT_URI
              value: "{{ if .Values.api.oauth.redirectUri }}{{ .Values.api.oauth.redirectUri }}{{ else }}https://{{ .Values.global.restApiSubdomain }}.{{ .Values.global.domain }}/auth/callback{{ end }}"
              {{- end }}
            - name: "OAUTH_SKIP_VERIFY"
              value: "{{ if hasKey .Values.global.tls "skipVerify" }}{{ .Values.global.tls.skipVerify }}{{ else }}{{ .Values.api.oauth.skipVerify }}{{ end }}"
            {{- $natsUri := .Values.global.nats.uri | default .Values.api.nats.uri }}
            - name: NATS_URI
              value: {{ $natsUri }}
            {{- $dashboardAddress := "" }}
            {{- if .Values.api.dashboardAddress }}
            {{- $dashboardAddress = .Values.api.dashboardAddress }}
            {{- else if .Values.api.redirectSubdomain }}
            {{- $dashboardAddress = printf "https://%s.%s" .Values.api.redirectSubdomain .Values.global.domain }}
            {{- else }}
            {{- $dashboardAddress = printf "https://%s.%s" .Values.global.uiSubdomain .Values.global.domain }}
            {{- end }}
            - name: ALLOWED_EXTERNAL_REDIRECT_URIS
              value: {{ if .Values.api.oauth.allowedExternalRedirectURIs }}{{ .Values.api.oauth.allowedExternalRedirectURIs }}{{ else }}{{ $dashboardAddress }}{{ end }}
            {{- if .Values.api.agent.hide }}
            - name: HIDE_AGENT_HOST
              value: "{{ .Values.api.agent.hide }}"
            {{- end }}
            - name: AGENT_HOST
              value: {{ if .Values.api.agent.host }}{{ .Values.api.agent.host }}{{ else }}{{ .Values.global.grpcApiSubdomain }}.{{ .Values.global.domain }}{{ end }}
            - name: AGENT_PORT
              value: "{{ .Values.api.agent.port }}"
            - name: LOG_SERVICE_ENABLED
              value: {{ if .Values.api.logServer.enabled }}"true"{{ else }}"false"{{ end }}
            - name: LOG_SERVICE_HOST
              value: {{ if .Values.api.logServer.host }}{{ .Values.api.logServer.host }}{{ else }}{{ .Values.global.grpcLogsSubdomain }}.{{ .Values.global.domain }}{{ end }}
            - name: LOG_SERVICE_PORT
              value: "{{ .Values.api.logServer.port }}"
            - name: API_ADDRESS
              value: {{ if .Values.api.apiAddress }}{{ .Values.api.apiAddress }}{{ else }}https://{{ .Values.global.restApiSubdomain }}.{{ .Values.global.domain }}{{ end }}
            - name: DASHBOARD_ADDRESS
              value: {{ $dashboardAddress }}
            - name: USE_TLS
              value: "{{ .Values.api.tls.serveHTTPS }}"
            - name: TLS_CERT
              value: "{{ .Values.api.tls.certPath }}"
            - name: TLS_KEY
              value: "{{ .Values.api.tls.keyPath }}"
            {{- if or .Values.global.customCaSecretRef .Values.customCaDirPath }}
            {{- $certsDir := .Values.customCaDirPath | default "/etc/testkube/certs" }}
            - name: SSL_CERT_DIR
              value: "{{ $certsDir }}"
            {{- end }}
            {{- $outputsBucket := .Values.global.storage.outputsBucket | default .Values.api.outputsBucket }}
            - name: OUTPUTS_BUCKET
              value: "{{ $outputsBucket }}"
            {{- $minioEndpoint := .Values.global.storage.endpoint | default .Values.api.minio.endpoint }}
            - name: CREDENTIALS_MASTER_PASSWORD
              {{- if .Values.global.credentials.masterPassword.secretKeyRef.name }}
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.global.credentials.masterPassword.secretKeyRef.key | default "password" }}
                  name: {{ .Values.global.credentials.masterPassword.secretKeyRef.name }}
              {{- else }}
              value: "{{ .Values.global.credentials.masterPassword.value }}"
              {{- end }}
            - name: MINIO_ENDPOINT
              value: "{{ tpl $minioEndpoint . }}"
            {{- $minioRegion := .Values.global.storage.region | default .Values.api.minio.region }}
            - name: MINIO_REGION
              value: "{{ $minioRegion }}"
            {{- $minioSecure := .Values.global.storage.secure | default .Values.api.minio.secure }}
            - name: MINIO_SSL
              value: "{{ $minioSecure }}"
            {{- $minioSkipVerify := .Values.global.storage.skipVerify | default .Values.api.minio.skipVerify }}
            - name: "MINIO_SKIP_VERIFY"
              value: "{{ if hasKey .Values.global.tls "skipVerify" }}{{ .Values.global.tls.skipVerify }}{{ else }}{{ .Values.api.minio.skipVerify }}{{ end }}"
            - name: MINIO_EXPIRATION
              value: "{{ .Values.api.minio.expirationPeriod }}"
            {{- if .Values.api.minio.credsFilePath }}
            - name: MINIO_SHARED_CREDENTIALS_FILE
              value: "{{ .Values.api.minio.credsFilePath }}"
            {{- else }}
            {{- $minioCredsSecretRef := .Values.global.storage.credsSecretRef | default .Values.api.minio.credsSecretRef }}
            {{- $minioAccessKeyId := .Values.global.storage.accessKeyId | default .Values.api.minio.accessKeyId }}
            {{- $minioSecretAccessKey := .Values.global.storage.secretAccessKey | default .Values.api.minio.secretAccessKey }}
            {{- $minioToken := .Values.global.storage.token | default .Values.api.minio.token }}
            - name: MINIO_ACCESS_KEY_ID
              {{- if $minioCredsSecretRef }}
              valueFrom:
                secretKeyRef:
                  key: root-user
                  name: {{ $minioCredsSecretRef }}
              {{- else }}
              value: "{{ $minioAccessKeyId }}"
              {{- end }}
            - name: MINIO_SECRET_ACCESS_KEY
              {{- if $minioCredsSecretRef }}
              valueFrom:
                secretKeyRef:
                  key: root-password
                  name: {{ $minioCredsSecretRef }}
              {{- else }}
              value: "{{ $minioSecretAccessKey }}"
              {{- end }}
            - name: MINIO_TOKEN
              {{- if $minioCredsSecretRef }}
              valueFrom:
                secretKeyRef:
                  key: token
                  name: {{ $minioCredsSecretRef }}
              {{- else }}
              value: "{{ $minioToken }}"
              {{- end }}
            {{- end }}
            - name: LOG_SERVER_GRPC_ADDRESS
              value: "{{ .Values.api.logServer.grpcAddress }}"
            - name: LOG_SERVER_SECURE
              value: "{{ .Values.api.logServer.secure }}"
            - name: LOG_SERVER_SKIP_VERIFY
              value: "{{ .Values.api.logServer.skipVerify }}"
            - name: LOG_SERVER_CERT_FILE
              value: "{{ .Values.api.logServer.certFile }}"
            - name: LOG_SERVER_KEY_FILE
              value: "{{ .Values.api.logServer.keyFile }}"
            - name: LOG_SERVER_CA_FILE
              value: "{{ .Values.api.logServer.caFile }}"
            - name: "AGENT_STORAGE_HOSTNAME"
              value: "{{ .Values.api.minio.signing.hostname }}"
            - name: "AGENT_STORAGE_SSL"
              value: "{{ .Values.api.minio.signing.secure }}"
            {{- if .Values.global.storage.public.endpoint }}
            - name: "PUBLIC_STORAGE_HOSTNAME"
              value: "{{ .Values.global.storage.public.endpoint }}"
            - name: "PUBLIC_STORAGE_SSL"
              value: "{{ .Values.global.storage.public.secure | default "false" }}"
            {{- end }}
            {{- if .Values.api.minio.certSecret.enabled }}
            - name: "MINIO_CERT_FILE"
              value: "{{ .Values.api.minio.certSecret.baseMountPath }}/{{ .Values.api.minio.certSecret.certFile }}"
            - name: "MINIO_KEY_FILE"
              value: "{{ .Values.api.minio.certSecret.baseMountPath }}/{{ .Values.api.minio.certSecret.keyFile }}"
            {{- if .Values.api.minio.mountCACertificate }}
            - name: "MINIO_CA_FILE"
              value: "{{ .Values.api.minio.certSecret.baseMountPath }}/{{ .Values.api.minio.certSecret.caFile }}"
            {{- end }}
            {{- end }}
            {{- if .Values.api.features.disablePersonalOrgs }}
            - name: "DISABLE_PERSONAL_ORGS"
              value: "{{.Values.api.features.disablePersonalOrgs }}"
            {{- end }}
            {{- if or .Values.api.features.bootstrapConfig.enabled .Values.api.features.bootstrapOrg }}
            - name: "BOOTSTRAP_CONFIG_ENABLED"
              value: "true"
            - name: "BOOTSTRAP_CONFIG_PATH"
              value: "/app/config/config"
            {{- end}}
            {{- with .Values.api.features.bootstrapAgentTokenSecretRef }}
            - name: {{ snakecase . | upper | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ . | quote}}
                  key: agent-token
            {{- end}}
            {{- range $k, $v := .Values.additionalEnv }}
            - name: {{ $k }}
              value: {{ tpl ($v | toString) $ | quote }}
            {{- end}}
            {{- if .Values.externalSecrets.enabled -}}
            {{- range $key, $value := .Values.externalSecrets.keys }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  key: {{ $value }}
                  name: api-external-secrets
            {{ end }}
            {{- end}}
            - name: TESTKUBE_ENABLE_LEGACY_TESTS
              value: "{{ .Values.api.features.legacyTests }}"
            - name: AUDIT_LOG_CLEANUP_ENABLED
              value: "{{ .Values.audit.cleanup.enabled }}"
            - name: AUDIT_LOG_RETENTION_PERIOD_DAYS
              value: "{{ .Values.audit.cleanup.retentionPeriod }}"
            - name: AUDIT_LOG_CLEANUP_CRON_INTERVAL
              value: "{{ .Values.audit.cleanup.cronInterval }}"
            - name: ENTERPRISE_ARTIFACT_RETENTION_DAYS
              value: "{{ .Values.api.storage.cleanup.retentionDays }}"
            - name: ENTERPRISE_ARTIFACT_MAX_STORAGE_SIZE_GB
              value: "{{ .Values.api.storage.cleanup.maxStorageSizeGb }}"
          ports:
            - name: {{ if .Values.api.tls.serveHTTPS }}https{{ else }}http{{ end }}
              containerPort: {{ if .Values.api.tls.serveHTTPS }}{{ .Values.api.tls.apiPort }}{{ else }}8090{{ end }}
              protocol: TCP
            - name: {{ if .Values.api.tls.serveHTTPS }}grpcs{{ else }}grpc{{ end }}
              containerPort: {{ if .Values.api.tls.serveHTTPS }}{{ .Values.api.tls.agentPort }}{{ else }}8089{{ end }}
              protocol: TCP
            {{- if .Values.prometheus.enabled }}
            - name: metrics
              containerPort: 9100
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              scheme: {{ if .Values.api.tls.serveHTTPS }}HTTPS{{ else }}HTTP{{ end }}
              port: {{ if .Values.api.tls.serveHTTPS }}https{{ else }}http{{ end }}
          readinessProbe:
            httpGet:
              path: /health
              scheme: {{ if .Values.api.tls.serveHTTPS }}HTTPS{{ else }}HTTP{{ end }}
              port: {{ if .Values.api.tls.serveHTTPS }}https{{ else }}http{{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.api.tls.serveHTTPS .Values.global.enterpriseLicenseSecretRef .Values.global.customCaSecretRef .Values.api.features.bootstrapConfig.enabled .Values.api.features.bootstrapOrg }}
          volumeMounts:
            {{- if .Values.api.tls.serveHTTPS }}
            - mountPath: /tmp/serving-cert/crt.pem
              readOnly: true
              name: serving-cert
              subPath: tls.crt
            - mountPath: /tmp/serving-cert/key.pem
              readOnly: true
              name: serving-cert
              subPath: tls.key
            {{- end }}
            {{- if and .Values.global.enterpriseLicenseSecretRef .Values.global.enterpriseOfflineAccess }}
            - mountPath: {{ .Values.enterpriseLicenseFilePath }}
              readOnly: true
              name: license-file
              subPath: license.lic
            {{- end }}
            {{- if .Values.global.customCaSecretRef }}
            {{- $certsDir := .Values.customCaDirPath | default "/etc/testkube/certs" }}
            - mountPath: {{ $certsDir }}/testkube-custom-ca.pem
              name: {{ .Values.global.customCaSecretRef }}
              readOnly: true
              subPath: {{ .Values.global.customCaSecretKey }}
            {{- end }}
            {{- if or .Values.api.features.bootstrapConfig.enabled .Values.api.features.bootstrapOrg }}
            - mountPath: /app/config
              name: testkube-config
            {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.api.tls.serveHTTPS .Values.global.enterpriseLicenseSecretRef .Values.global.customCaSecretRef .Values.api.features.bootstrapConfig.enabled .Values.api.features.bootstrapOrg }}
      volumes:
        {{- if .Values.api.tls.serveHTTPS }}
        - name: serving-cert
          secret:
            secretName: {{ .Values.api.tls.tlsSecret }}
        {{- end }}
        {{- if and .Values.global.enterpriseLicenseSecretRef .Values.global.enterpriseOfflineAccess }}
        - name: license-file
          secret:
            secretName: {{ .Values.global.enterpriseLicenseSecretRef }}
        {{- end }}
        {{- if .Values.global.customCaSecretRef }}
        - name: {{ .Values.global.customCaSecretRef }}
          secret:
            secretName: {{ .Values.global.customCaSecretRef }}
            defaultMode: 420
        {{- end }}
        {{- if or .Values.api.features.bootstrapConfig.enabled .Values.api.features.bootstrapOrg }}
        - configMap:
            defaultMode: 420
            name: {{ include "testkube-cloud-api.fullname" . }}-config
          name: testkube-config
        {{- end }}
      {{- end }}
