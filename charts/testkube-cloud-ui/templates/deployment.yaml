apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testkube-cloud-ui.fullname" . }}
  labels:
    {{- include "testkube-cloud-ui.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "testkube-cloud-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "testkube-cloud-ui.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "testkube-cloud-ui.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: REACT_APP_SEGMENT_WRITE_KEY
              {{- if .Values.ui.segment.secretRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ui.segment.secretRef }}
                  key: "SEGMENTIO_WRITE_KEY_UI"
              {{- else }}
              value: {{ .Values.ui.segment.writeKey }}
              {{- end }}
            - name: REACT_APP_API_SERVER_ENDPOINT
              value: "{{ required ".Values.ui.apiServerEndpoint must be configured" .Values.ui.apiServerEndpoint }}"
            - name: REACT_APP_API_ROOT_ROUTE
              value: "{{ required ".Values.ui.rootRoute must be configured" .Values.ui.rootRoute }}"
            {{- if .Values.sentry.enabled }}
            - name: REACT_APP_SENTRY_KEY
              {{- if .Values.sentry.secretRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.sentry.secretRef }}
                  key: "SENTRY_KEY"
              {{- else }}
              value: "{{ .Values.sentry.url }}"
              {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: html
            - mountPath: /tmp
              name: tmp
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - emptyDir: {}
          name: html
        - emptyDir: {}
          name: tmp
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
